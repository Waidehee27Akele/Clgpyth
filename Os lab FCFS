
#include <stdio.h>

int main()
{
    int n,bt[20],wt[20],tat[20],avwt=0,avtat=0,i,j;
    printf("Enter total number of procesees(maximum 20:");
    scanf("%d",&n);
    
    printf("Enter Process Burst time");
    for(i=0;i<n;i++)
    {
        printf("P[%d]:",i++);
        scanf("%d",&bt[i]);
    }
    
    wt[0]=0;
    
    for(i=1;i<n;i++)
    {
        wt[i]=0;
        for(j=0;j<i;j++)
            wt[i]=wt[i]+bt[j];
    }
    
    printf("\nProcess \t Burst time \t Waiting time \t Turnaround time");
    
    for(i=0;i<n;i++)
    {
        tat[i]=bt[i]+wt[i];
        avwt+=wt[i];
        avtat+=tat[i];
        printf("\nP[%d]\t\t%d\t\t%d\t\t%d",i+1,bt[i],wt[i],tat[i]);
    }
    
    avwt/=i;
    avtat/=i;
    printf("\nAverage waiting Time:%d",avwt);
    printf("\nAverage Turnaround Time:%d",avtat);
    return 0;
    
}

OUTPUT
-----------------------------------------------------------

Enter total number of procesees(maximum 20:5
Enter Process Burst timeP[0]:1
P[2]:2
P[4]:3
Process 	 Burst time 	 Waiting time 	 Turnaround time
P[1]		832		0		832
P[2]		1		832		833
P[3]		832		833		1665
P[4]		2		1665		1667
P[5]		832		1667		2499
Average waiting Time:999
Average Turnaround Time:1499
----------------------------------------------------------

Shortest job first:

#include <stdio.h>

int main()
{
    int n,bt[20],wt[20],tat[20],avwt=0,avtat=0,i,j;
    printf("Enter total number of procesees(maximum 20:");
    scanf("%d",&n);
    
    printf("Enter Process Burst time");
    for(i=0;i<n;i++)
    {
        printf("p%d:",i++);
        scanf("%d",&bt[i]);
        p[i]=i+1;
    }
    
    //sORTING OF BURST TIMES
    for(i=0;i<n;i++)
    {
        int pos=i;
        for(j=i+1;j<n;j++)
        {
            if(bt[j]<bt[pos])
                pos=j;
        }
        
        int temp=bt[i];
        bt[i]=bt[pos];
        bt[pos]=temp;
        
        temp=p[i];
        p[i]=p[pos];
        p[pos]=temp;
    }
    
    wt[0]=0;
    
    for(i=1;i<n;i++)
    {
        wt[i]=0;
        for(j=0;j<i;j++)
            wt[i]=wt[i]+bt[j];
            
        total+=wt[i];
    }
    
    avwt=(float)total/n;
    total=0;
    
    printf("\nProcess \t Burst time \t Waiting time \t Turnaround time");
    
    for(i=0;i<n;i++)
    {
        tat[i]=bt[i]+wt[i];
        avwt+=wt[i];
        avtat+=tat[i];
        printf("\nP[%d]\t\t%d\t\t%d\t\t%d",i+1,bt[i],wt[i],tat[i]);
    }
    
    avwt/=i;
    avtat/=i;
    printf("\nAverage waiting Time:%d",avwt);
    printf("\nAverage Turnaround Time:%d",avtat);
    return 0;
    
}
    
    
